package controller;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.Optional;

import application.Main;
import entity.User;
import javafx.application.Platform;
import javafx.event.EventHandler;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.ButtonType;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.ButtonBar.ButtonData;
import javafx.stage.Modality;
import javafx.stage.Stage;
import javafx.stage.WindowEvent;

public class WindowController {

	private Map<String, Stage> windows = new HashMap<>();

	public void initWindow(String fxml, Stage stage) {
		windows.put(fxml, stage);
		stage.setOnCloseRequest(new EventHandler<WindowEvent>() {

			@Override
			public void handle(WindowEvent event) {
				event.consume();
				String text = Main.getInstance().getLanguage().getText("ConfirmExit");
				boolean confirm = confirm(text);
				if (confirm) {
					Platform.exit();
				}
				// TODO Autogenerated, savenut program alebo sa aspon spytat ci ho savenut
			}

		});
	}

	public boolean confirm(String contentText) {
		Alert alert = new Alert(AlertType.CONFIRMATION);
		String title = Main.getInstance().getLanguage().getText("ConfirmTitle");
		alert.setTitle(title);
		alert.setHeaderText(null);
		alert.setContentText(contentText);
		String answer = Main.getInstance().getLanguage().getText("Yes");
		ButtonType buttonTypeYes = new ButtonType(answer);
		answer = Main.getInstance().getLanguage().getText("No");
		ButtonType buttonTypeNo = new ButtonType(answer);
		answer = Main.getInstance().getLanguage().getText("Cancel");
		ButtonType buttonTypeCancel = new ButtonType(answer, ButtonData.CANCEL_CLOSE);
		alert.getButtonTypes().setAll(buttonTypeYes, buttonTypeNo, buttonTypeCancel);
		Optional<ButtonType> result = alert.showAndWait();
		if (result.get() == buttonTypeYes) {
		    return true;
		}
		return false;
	}

	public void information(String contentText) {
		Alert alert = new Alert(AlertType.INFORMATION);
		String title = Main.getInstance().getLanguage().getText("InfoTitle");
		alert.setTitle(title);
		alert.setHeaderText(null);
		alert.setContentText(contentText);
		alert.showAndWait();
	}

	public void error(String contentText) {
		Alert alert = new Alert(AlertType.ERROR);
		String title = Main.getInstance().getLanguage().getText("ErrorTitle");
		alert.setTitle(title);
		alert.setHeaderText(null);
		alert.setContentText(contentText);
		alert.showAndWait();
	}
	
	public void openInitWindow(User user, String fxml, String title) throws IOException {
		Stage stage = windows.get(fxml);
		if (stage == null) {
			stage = new Stage();
			FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource(fxml));
			Parent root = fxmlLoader.load();
			InitUser controller = fxmlLoader.<InitUser>getController();
			controller.initUser(user);
			Scene scene = new Scene(root);
			stage.setTitle(title);
			stage.setScene(scene);
			windows.put(fxml, stage);
			stage.setOnCloseRequest(new EventHandler<WindowEvent>() {

				@Override
				public void handle(WindowEvent event) {
					event.consume();
					String text = Main.getInstance().getLanguage().getText("ConfirmExit");
					boolean confirm = confirm(text);
					if (confirm) {
						Platform.exit();
					}
					// TODO Autogenerated, savenut program alebo sa aspon spytat ci ho savenut
				}

			});
			stage.show();
		} else {
			//TODO logger?
		}
	}

	public void openWindow(String fxml, String title) throws IOException { //TODO title je zbytocny, mohol by byt automaticky, tie okna ho aj tak budu mat rovnake za behu
		Stage stage = windows.get(fxml);
		if (stage == null) {
			stage = new Stage();
			Parent root = FXMLLoader.load(getClass().getResource(fxml));
			Scene scene = new Scene(root);
			stage.setTitle(title);
			stage.setScene(scene);
			windows.put(fxml, stage);
			stage.setOnCloseRequest(new EventHandler<WindowEvent>() {

				@Override
				public void handle(WindowEvent event) {
					event.consume();
					String text = Main.getInstance().getLanguage().getText("ConfirmExit");
					boolean confirm = confirm(text);
					if (confirm) {
						Platform.exit();
					}
					// TODO Autogenerated, savenut program alebo sa aspon spytat ci ho savenut
				}

			});
			stage.show();
		} else {
			//TODO logger?
		}
	}
	
	public void openInitWaitWindow(User user, String fxml, String title) throws IOException {
		Stage stage = windows.get(fxml);
		if (stage == null) {
			stage = new Stage();
			stage.initModality(Modality.APPLICATION_MODAL);
			FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource(fxml));
			Parent root = fxmlLoader.load();
			InitUser controller = fxmlLoader.<InitUser>getController();
			controller.initUser(user);
			Scene scene = new Scene(root);
			stage.setTitle(title);
			stage.setScene(scene);
			windows.put(fxml, stage);
			stage.setOnCloseRequest(new EventHandler<WindowEvent>() {

				@Override
				public void handle(WindowEvent arg0) {
					closeWindow(fxml);
				}

			});
			stage.showAndWait();
		} else {
			//TODO logger?
		}
	}

	public void openWaitWindow(String fxml, String title) throws IOException {
		Stage stage = windows.get(fxml);
		if (stage == null) {
			stage = new Stage();
			stage.initModality(Modality.APPLICATION_MODAL);
			Parent root = FXMLLoader.load(getClass().getResource(fxml));
			Scene scene = new Scene(root);
			stage.setTitle(title);
			stage.setScene(scene);
			windows.put(fxml, stage);
			stage.setOnCloseRequest(new EventHandler<WindowEvent>() {

				@Override
				public void handle(WindowEvent arg0) {
					closeWindow(fxml);
				}

			});
			stage.showAndWait();
		} else {
			//TODO logger?
		}
	}

	public void closeWindow(String fxml) {
		Stage stage = windows.get(fxml);
		if (stage != null) {
			windows.remove(fxml);
			stage.close();
		} else {
			//TODO logger?
		}
	}

}
