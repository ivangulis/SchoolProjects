package executive;

import java.util.ArrayList;
import java.util.List;
import java.util.logging.Logger;

import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

import dao.ChampionDAO;
import model.Champion;
import webSearchFeature.WebSearch;

/**
 * Session Bean implementation class LoginExecutiveBean
 */
@Stateless
public class ChampionsExecutiveBean {

	@PersistenceContext
    private EntityManager entityManager;
	private ChampionDAO championDAO = new ChampionDAO();
	
	private static Logger LOG = Logger.getLogger(UserExecutiveBean.class.getName());
	
	public void saveAllChampions() {
		List<Champion> allChampions = new ArrayList<Champion>();
		
		WebSearch webSearch = new WebSearch();
		allChampions = webSearch.searchForChampions();
		
		championDAO.saveAllChampions(entityManager, allChampions);
		
		//return allChampions;
	}
	
	public List<Champion> loadFromDbAllChampions() {
    	List<Champion> allChampions = null;
		try {
			allChampions = championDAO.loadFromDbAllChampions(entityManager);
			for (Champion champion : allChampions) {
				entityManager.detach(champion);
			}
		} catch (Exception e) {
			return allChampions; //TODO logger
		}
    	return allChampions;
    }
	
	public List<Champion> getTopBans() {
    	List<Champion> banList = null;
		try {
			banList = championDAO.getTopBans(entityManager);
			for (Champion champion : banList) {
				entityManager.detach(champion);
			}
		} catch (Exception e) {
			return banList; //TODO logger
		}
    	return banList;
    }

}
