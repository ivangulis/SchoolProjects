package application;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.SecureRandom;
import java.util.logging.Level;
import java.util.logging.Logger;

import view.RegisterController;

public class Hasher {

	private static Logger LOG = Logger.getLogger(RegisterController.class.getName());
	
	/** Kód upravený z http://howtodoinjava.com/security/how-to-generate-secure-password-hash-md5-sha-pbkdf2-bcrypt-examples/ 
	 * Vykoná hashovanie hesla */
	public String getHash(String password, String salt) {
		StringBuilder sb = new StringBuilder();
		try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            md.update(salt.getBytes());
            byte[] bytes = md.digest(password.getBytes());
            for(int i=0; i< bytes.length ;i++)
            {
                sb.append(Integer.toString((bytes[i] & 0xff) + 0x100, 16).substring(1));
            }
		} catch (NoSuchAlgorithmException e) {
			LOG.log(Level.SEVERE, "No hash was generated - MessageDigestSpi implementation for the specified algorithm"
					+ " (MD5) is not available.", e);
		}
		return sb.toString();
	}
	
	/** Vygenerovanie soly */
	public String getSalt() {
	    SecureRandom sr = null;
	    byte[] salt = new byte[16];
		try {
			sr = SecureRandom.getInstance("SHA1PRNG", "SUN");
			sr.nextBytes(salt);
		} catch (NoSuchAlgorithmException e) {
			LOG.log(Level.SEVERE, "MessageDigestSpi implementation for the specified algorithm"
					+ " (MD5) is not available.", e);
		} catch (NoSuchProviderException e) {
			LOG.log(Level.SEVERE, "No salt was generated - "
					+ "The specified provider is not registered in the security provider list.", e);
		}
	    return salt.toString();
	}
	
}
